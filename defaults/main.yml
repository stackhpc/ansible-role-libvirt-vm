---

# The default directory in which to store VM console logs, if a VM-specific log
# file path is not given.
libvirt_vm_default_console_log_dir: "/var/log/libvirt-consoles"

# Whether UUID should be calculated by hashing the VM name. If not, the UUID is
# randomly generated by libvirt when the VM is defined.
libvirt_vm_default_uuid_deterministic: false

# The default location for libvirt images
libvirt_volume_default_images_path: '/var/lib/libvirt/images'

# Default type for Libvirt volumes
libvirt_volume_default_type: volume

# The default format for Libvirt volumes.
libvirt_volume_default_format: qcow2

# The default device for Libvirt volumes.
libvirt_volume_default_device: disk

# Path to cache downloaded images.
libvirt_vm_image_cache_path: "{{ libvirt_image_cache_path }}"

# NOTE(mgoddard): Temporarily support this name in addition to
# 'libvirt_vm_image_cache_path'.
# TODO(mgoddard): Remove this for the next major release.
libvirt_image_cache_path: "/tmp/"

# CPU architecture.
libvirt_vm_arch: x86_64

# Virtualisation engine. If not set, the role will attempt to auto-detect the
# optimal engine to use.
libvirt_vm_engine:

# Path to emulator binary. If not set, the role will attempt to auto-detect the
# correct emulator to use.
libvirt_vm_emulator:

# Default value for clock syncing. The default (false) uses <clock sync="localtime">
# to configure the instances clock synchronisation. Change to a timezone to make
# configuration use <clock offset="specified offset">
libvirt_vm_clock_offset: false

# Default value for whether to trust guest receive filters. This gets mapped to
# the trustGuestRxFilters attribute of VM interfaces.
libvirt_vm_trust_guest_rx_filters: false

# A list of specifications of VMs to be created.
# For backwards compatibility, libvirt_vms defaults to a singleton list using
# the values of the deprecated variables below.
# See README.md or tasks/main.yml for these attributes' defaults.
libvirt_vms:
    # State of the VM. May be 'present' or 'absent'.
    - state: "{{ libvirt_vm_state }}"

      # Name of the VM.
      name: "{{ libvirt_vm_name }}"

      # Memory in MB.
      memory_mb: "{{ libvirt_vm_memory_mb }}"

      # Number of vCPUs.
      vcpus: "{{ libvirt_vm_vcpus }}"

      # Virtual machine type.
      machine: "{{ libvirt_vm_machine }}"

      # Virtual machine CPU mode.
      cpu_mode: "{{ libvirt_vm_cpu_mode | default(libvirt_cpu_mode_default, true) }}"

      # List of volumes.
      volumes: "{{ libvirt_vm_volumes }}"

      # What time should the clock be synced to on boot (utc/localtime/timezone/variable)
      clock_offset: "localtime"

      # List of network interfaces.
      interfaces: "{{ libvirt_vm_interfaces }}"

      # Path to console log file.
      console_log_path: "{{ libvirt_vm_console_log_path }}"

      # XML template file to source domain definition
      xml_file: vm.xml.j2

      # May be one of: bios, or efi.
      boot_firmware: bios

# Variables to add to the enviroment that is used to execute virsh commands
libvirt_vm_virsh_default_env: "{{  { 'LIBVIRT_DEFAULT_URI': libvirt_vm_uri } if libvirt_vm_uri else {} }}"

# Override for the libvirt connection uri. Leave unset to use the default.
libvirt_vm_uri: ""

# Whether to use sudo with libvirt commands, this can be disabled with qemu:///session
# to create VMs as an unprivileged user
libvirt_vm_sudo: true

# Default CPU mode if libvirt_vm_cpu_mode or vm.cpu_mode is undefined
libvirt_cpu_mode_default: "{{ 'host-passthrough' if libvirt_vm_engine == 'kvm' else 'host-model' }}"

# Path where cloud-init files will be stored
libvirt_vm_cloud_init_dir: "{{ libvirt_volume_default_images_path }}/cloud-init"

### DEPRECATED ###
# Use the above settings for each item within `libvirt_vms`, instead of the
# below deprecated variables.

libvirt_vm_state:
libvirt_vm_machine:
libvirt_vm_cpu_mode:
libvirt_vm_volumes:
libvirt_vm_interfaces:
libvirt_vm_console_log_path:
# Required, so we should fail if not set.
# libvirt_vm_name:
# libvirt_vm_memory_mb:
# libvirt_vm_vcpus:

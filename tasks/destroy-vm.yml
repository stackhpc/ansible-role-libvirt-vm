---
# The destroyed state does not seem to be idempotent, so check whether the VM
# exists before destroying it.
- name: Check the VM's status
  virt:
    name: "{{ vm.name }}"
    command: list_vms
  register: result
  become: yes

- block:
    - name: Ensure the VM is absent
      virt:
        name: "{{ vm.name }}"
        state: destroyed
      become: yes

    - name: Ensure the VM is undefined
      # note(wszumski): the virt module does not seem to support
      # removing vms with nvram defined - as a workaround, use the
      # virsh cli directly. It may be better to detect if dumpxml
      # actually contains an nvram element rather than relying on
      # boot_firmware having the correct value.
      command: virsh -c qemu:///system undefine{% if boot_firmware == 'efi' %} --nvram{% endif %} {{ vm.name }}
      become: yes
  when: vm.name in result.list_vms
